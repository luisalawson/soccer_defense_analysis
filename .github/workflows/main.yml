name: test-code-check

on:
  pull_request:

env:
  DIR: .github/workflows/scripts

jobs:
  check-internal-keyword-tokens:
    runs-on: ubuntu-latest
    if: always() # need to run even if the previous job fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd ${{ env.DIR }}/endpoint-tokens-check
          npm install

      - name: Run check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          node ${{ env.DIR }}/endpoint-tokens-check/endpoint-tokens-check.js

  codeowners-check:
    runs-on: ubuntu-latest
    if: always() # Ensures it runs even if previous jobs fail

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Detect new folders
      id: check-new-folders
      run: |
        NEW_FOLDERS=$(git diff --diff-filter=A --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | awk -F/ '{print $1}' | sort -u | uniq)
        if [[ -n "$NEW_FOLDERS" ]]; then
          echo "New folders detected: $NEW_FOLDERS"
          echo "run_check=true" >> $GITHUB_ENV
          echo "NEW_FOLDERS=$NEW_FOLDERS" >> $GITHUB_ENV
        else
          echo "No new folders detected."
          echo "run_check=false" >> $GITHUB_ENV
        fi

    - name: Set up Node.js
      if: env.run_check == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      if: env.run_check == 'true'
      run: |
        cd ${{ env.DIR }}/codeowners-check
        npm install

    - name: Run check
      if: env.run_check == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        NEW_FOLDERS: ${{ env.NEW_FOLDERS }}
      run: |
        echo "Checking CODEOWNERS for new folders: $NEW_FOLDERS"
        node ${{ env.DIR }}/codeowners-check/codeowners-check.js


  # update-file-on-merge:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.pull_request.merged == true }} # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#running-your-pull_request-workflow-when-a-pull-request-merges

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install dependencies
  #       run: |
  #         cd ${{ env.DIR }}/update-file
  #         npm install

  #     - name: Update File with PR Details
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GITHUB_REPOSITORY: ${{ github.repository }}
  #         PR_OWNER: ${{ github.event.pull_request.user.login }}
  #         PR_NUMBER: ${{ github.event.pull_request.number }}
  #       run: |
  #         node ${{ env.DIR }}/update-file/update-file.js
